import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.Test;

/**
 * 
 */

/**
 * @author Han Wang
 * @version Autumn 2014
 */
public class TriangleTest {
    
    /**
     * constant for tolerance.
     */
    private static final double TOLERENCE = 0.001;
    
    /** A testCircle to use in my tests. */
    private Triangle myTestTriangle;
    
    /**
     * @throws java.lang.Exception create new triangle.
     */
    @Before
    public void setUp() throws Exception {
        myTestTriangle = new Triangle(3.00, 4.00, 5.00);

    }

    /**
     * test Exception.
     * @throws Exception 
     */
    
    @Test(expected = Exception.class) 
    public void circleExceptionTest2() throws Exception {
        
        new Triangle(0.00, 0.00, 0);
    }
    /**
     * Test method for {@link Triangle#Triangle(double, double, double)}.
     */
    @Test
    public void testTriangle() {
        assertEquals("create error! SideA", 3.00, myTestTriangle.getSideA(), TOLERENCE);
        assertEquals("create error! SideB", 4.00, myTestTriangle.getSideB(), TOLERENCE);
        assertEquals("create error! SideC", 5.00, myTestTriangle.getSideC(), TOLERENCE);
    }
    


    /**
     * Test method for {@link Triangle#validateInput(double, double, double)}.
     * @throws Exception 
     */
    @Test
    public void testValidateInput() throws Exception {
               
        assertEquals("create error! SideA", 3.00, myTestTriangle.getSideA(), TOLERENCE);
        assertEquals("create error! SideB", 4.00, myTestTriangle.getSideB(), TOLERENCE);
        assertEquals("create error! SideC", 5.00, myTestTriangle.getSideC(), TOLERENCE);
    }


    /**
     * Test method for {@link Triangle#getSideA()}.
     * @throws Exception 
     */
    @Test
    public void testGetSideA() throws Exception {
        
        assertEquals("error on getA", 3.00,  myTestTriangle.getSideA(), TOLERENCE);
    }

    /**
     * Test method for {@link Triangle#getSideB()}.
     */
    @Test
    public void testGetSideB() {
        assertEquals("error on getB", 4.00, myTestTriangle.getSideB(), TOLERENCE);
    }

    /**
     * Test method for {@link Triangle#getSideC()}.
     */
    @Test
    public void testGetSideC() {
        assertEquals("error on getC", 5.00, myTestTriangle.getSideC(), TOLERENCE);
    }

    /**
     * Test method for {@link Triangle#getPerimeter()}.
     */
    @Test
    public void testGetPerimeter() {
        assertEquals("errors on Perimeter!", 12.00, myTestTriangle.getPerimeter(), TOLERENCE);
    }

    /**
     * Test method for {@link Triangle#getArea()}.
     */
    @Test
    public void testGetArea() {
        assertEquals("errors on area!", 6.00, myTestTriangle.getArea(), TOLERENCE);
    }

}
